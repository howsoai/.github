name: "Reusable Workflow - Scan Pull Request"

on:
  workflow_call:
    inputs:
      upstream-packages:
        description: A whitespace separated list of Howso package dependencies (e.g., "amalgam-lang-py howso-engine-py").
        type: string
        required: false

jobs:

  scan-pull-request:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Download Artifacts
        run: |
          if [[ -n "${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}" ]]; then
            export PIP_EXTRA_INDEX_URL=https://vsts-build@diveplane.com:${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}@dpbuild.jfrog.io/artifactory/api/pypi/pypi-edge/simple
          fi
          mkdir -p dist
          # Allow this to fail in case there are no 'main' requirements
          pip download -r requirements-3.11.txt -d ./dist || true
          # Remove upstream Howso packages since we don't want these to be scanned
          for pkg in ${{ inputs.upstream-packages }}; do
            fmtd_pkg=${pkg//-py/}  # Remove the "-py" postfix
            fmtd_pkg=${fmtd_pkg//-/_}  # Change "-" to "_"
            echo "Removing $fmtd_pkg from consideration for scanning."
            rm -f ./dist/$fmtd_pkg*
          done

      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JFROG_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
          JF_ALLOWED_LICENSES: "Apache-1.0, Apache-1.1, Apache-2.0, Artistic-1.0, Artistic-1.0-Perl, Artistic-2.0, BSD, BSD 2-Clause, BSD 3-Clause, BSD-2-Clause, BSD-3-Clause, MIT, MPL-2.0"

      - name: 🐸 scan
        run: |
          if [[ ! -e "requirements-3.11.txt" ]]; then
            echo "Non-dev requirements file is not present"
            exit 0
          fi
          # Run a scan, but don't fail if there are problems, and save the exit code/output
          output=$(jf s ./dist/ --licenses --watches pipeline-distributed 1>&2) || exit_code=$?
          echo "$output"
          echo "Exit code: $exit_code"
          # Check if the command failed and raise a warning if so
          if [ "$exit_code" != "0" ]; then
            echo "::warning title=Security and/or license violations found!::Please view the output of the JFrog xray scanner job."
          fi